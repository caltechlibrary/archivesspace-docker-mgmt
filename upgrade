#!/usr/bin/env bash

if [ "$(id -u)" -ne 0 ]; then
    echo "üòµ SCRIPT MUST BE RUN AS ROOT (to modify /opt files)"
    echo "EXAMPLE: sudo ./$0 [--rebuild-solr]"
    exit 1
fi

# load environment variables from .env file
if [ -f .env ]; then
    set -a  # automatically export all variables
    # shellcheck source=/dev/null
    . ./.env
    set +a
else
    echo ".env file not found"
    exit 1
fi

# download latest archivesspace-docker release
curl -sLO "https://github.com/archivesspace/archivesspace/releases/download/${TAG}/archivesspace-docker-${TAG}.zip"
# unzip (creates ./archivesspace directory)
unzip -q "archivesspace-docker-${TAG}.zip"
# remove the zip file
rm "archivesspace-docker-${TAG}.zip"

# REPLACE ARCHIVESSPACE DEFAULT CONFIGURATION WITH CUSTOM CONFIGURATION
mv archivesspace/config/config.rb archivesspace/config/default-config.rb
echo '# Custom Configuration' > archivesspace/config/config.rb
{
    echo "AppConfig[:db_url] = 'jdbc:mysql://db:3306/${DB}?useUnicode=true&characterEncoding=UTF-8&user=as&password=as123&useSSL=false&allowPublicKeyRetrieval=true'"
    echo 'AppConfig[:solr_url] = "http://solr:8983/solr/archivesspace"'
    echo "AppConfig[:oai_proxy_url] = 'http://${DOMAIN}/oai'"
    echo "AppConfig[:frontend_proxy_url] = 'http://${DOMAIN}/staff'"
    echo "AppConfig[:public_proxy_url] = 'http://${DOMAIN}'"
    echo 'AppConfig[:session_expire_after_seconds] = 604800'
} >> archivesspace/config/config.rb
echo '<%= stylesheet_link_tag "#{@base_url}/assets/custom.css" %>' > archivesspace/plugins/local/frontend/views/layout_head.html.erb
mkdir -p archivesspace/plugins/local/frontend/assets
echo '.min-vh-100 { border: thick solid rebeccapurple }' > archivesspace/plugins/local/frontend/assets/custom.css

replace_env_value() {
    local KEY="$1"
    local OLD="$2"
    local NEW="$3"
    perl -i -pe "s/\\Q$OLD\\E/$NEW/g if /^\\s*\\Q$KEY\\E=/" "archivesspace/.env"
}

# replace values in the docker .env file
replace_env_value "MYSQL_DATABASE" "archivesspace" "${DB}" ".env"
replace_env_value "NGINX_PORT" "80" "${NGINX_PORT}" ".env"

# Add phpMyAdmin service to docker-compose.yml
add_phpmyadmin_to_compose() {
    local compose_file="$1"
    local patch_file="./phpmyadmin-service.yml"

    # Check if phpMyAdmin service already exists
    if grep -q "phpmyadmin:" "$compose_file"; then
        return 0
    fi

    # Insert phpMyAdmin service before the volumes section
    awk '
    /^volumes:/ {
        while ((getline line < "'"$patch_file"'") > 0) {
            print line
        }
        close("'"$patch_file"'")
        print ""
    }
    { print }
    ' "$compose_file" > "${compose_file}.tmp"

    mv "${compose_file}.tmp" "$compose_file"
}

add_phpmyadmin_to_compose "archivesspace/docker-compose.yml"

# run the restore script
./restore --upgrade
# unzip the database backup
datestamp=$(TZ=':US/Pacific' date +'%Y-%m-%d')
gunzip -k "backups/${DB}-${datestamp}.sql.gz"
# move db to the sql directory inside the archivesspace-docker directory
mv "backups/${DB}-${datestamp}.sql" "archivesspace/sql"

# bring down archivesspace
docker compose --project-name archivesspace --file /opt/archivesspace/docker-compose.yml down

# move the configured application directory
if [ -d "/opt/archivesspace-docker-${TAG}" ]; then
    rm -rf "/opt/archivesspace-docker-${TAG}"
fi
mv archivesspace "/opt/archivesspace-docker-${TAG}"

if [[ "$1" == "--rebuild-solr" ]]; then
    docker volume rm archivesspace_app-data archivesspace_solr-data
fi

# symlink /opt/archivesspace
if [ -L "/opt/archivesspace" ]; then
    if [ "$(readlink /opt/archivesspace)" != "/opt/archivesspace-docker-${TAG}" ]; then
        rm /opt/archivesspace
        ln -s "/opt/archivesspace-docker-${TAG}" /opt/archivesspace
    fi
elif [ -e "/opt/archivesspace" ]; then
    echo "‚ùå /opt/archivesspace exists and is not a symlink"
    exit 1
else
    ln -s "/opt/archivesspace-docker-${TAG}" /opt/archivesspace
fi

# bring up archivesspace
docker compose --project-name archivesspace --file /opt/archivesspace/docker-compose.yml pull
docker compose --project-name archivesspace --file /opt/archivesspace/docker-compose.yml up -d --build --force-recreate

echo "üéâ Upgrade complete! ArchivesSpace is now running with the latest version. It may take a few minutes to become available."
